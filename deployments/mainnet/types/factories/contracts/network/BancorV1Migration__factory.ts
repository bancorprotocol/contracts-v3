/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  BancorV1Migration,
  BancorV1MigrationInterface,
} from "../../../contracts/network/BancorV1Migration";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBancorNetwork",
        name: "initNetwork",
        type: "address",
      },
      {
        internalType: "contract INetworkSettings",
        name: "initNetworkSettings",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "initBNT",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IPoolToken",
        name: "poolToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract Token",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract Token",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "migratedA",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "migratedB",
        type: "bool",
      },
    ],
    name: "PositionMigrated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IPoolToken",
        name: "poolToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "migratePoolTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "";

type BancorV1MigrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BancorV1MigrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BancorV1Migration__factory extends ContractFactory {
  constructor(...args: BancorV1MigrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initNetwork: string,
    initNetworkSettings: string,
    initBNT: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BancorV1Migration> {
    return super.deploy(
      initNetwork,
      initNetworkSettings,
      initBNT,
      overrides || {}
    ) as Promise<BancorV1Migration>;
  }
  override getDeployTransaction(
    initNetwork: string,
    initNetworkSettings: string,
    initBNT: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initNetwork,
      initNetworkSettings,
      initBNT,
      overrides || {}
    );
  }
  override attach(address: string): BancorV1Migration {
    return super.attach(address) as BancorV1Migration;
  }
  override connect(signer: Signer): BancorV1Migration__factory {
    return super.connect(signer) as BancorV1Migration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BancorV1MigrationInterface {
    return new utils.Interface(_abi) as BancorV1MigrationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BancorV1Migration {
    return new Contract(address, _abi, signerOrProvider) as BancorV1Migration;
  }
}
